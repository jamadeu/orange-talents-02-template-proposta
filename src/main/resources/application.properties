# data source
spring.datasource.driverClassName=${DB_DRIVER}
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.tomcat.test-while-idle=true
spring.datasource.tomcat.validation-query=SELECT 1
# jpa
spring.jpa.database-platform=${DB_PLATFORM}
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.show_sql=false
spring.jpa.properties.hibernate.dialect=${DB_PLATFORM}
# actuator
management.endpoints.health.show-details=always
management.endpoints.web.exposure.include=info,metrics,health
management.endpoint.health.probes.enabled=true
# server
server.error.include-message=always
# Feign
API_ANALISE=${API_ANALISE}
API_CARTOES=${API_CARTOES}
# oauth
## spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/proposta}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/proposta/protocol/openid-connect/certs}
# Jaeger
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}
opentracing.jaeger.service-name=${spring.application.name}
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}